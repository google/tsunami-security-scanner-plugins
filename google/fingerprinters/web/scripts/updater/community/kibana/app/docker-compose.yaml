services:
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}"
    container_name: elasticsearch
    restart: always
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "cluster.routing.allocation.disk.threshold_enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200 >/dev/null || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    container_name: kibana
    image: "docker.elastic.co/kibana/kibana:${ES_VERSION}"
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_SECURITY_ENCRYPTIONKEY=s123456789012345678901234567890123
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=s123456789012345678901234567890123
      - XPACK_REPORTING_ENCRYPTIONKEY=s123456789012345678901234567890123
      - SERVER_PUBLICBASEURL=http://localhost:5601
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:5601/api/status | grep -q 'All services are available'"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local


