plugins {
    id 'application'
    id 'java-library'
    id 'com.google.protobuf' version "0.8.14"
}

description = 'Tsunami web application fingerprinter.'
group = 'com.google.tsunami'
version = '0.0.1-SNAPSHOT'

repositories {
    /* TODO(b/210549664): reenable google mirror
    maven { // The google mirror is less flaky than mavenCentral()
        url 'https://maven-central.storage-download.googleapis.com/repos/central/data/'
    }
     */
    mavenCentral()
    mavenLocal()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    jar {
        manifest {
            attributes('Implementation-Title': name,
                    'Implementation-Version': version,
                    'Built-By': System.getProperty('user.name'),
                    'Built-JDK': System.getProperty('java.version'),
                    'Source-Compatibility': sourceCompatibility,
                    'Target-Compatibility': targetCompatibility)
        }

        exclude 'com/google/tsunami/plugins/fingerprinters/web/tools/**/*'
    }

    javadoc.options {
        encoding = 'UTF-8'
        use = true
        links 'https://docs.oracle.com/javase/8/docs/api/'
    }

    // Log stacktrace to console when test fails.
    test {
        testLogging {
            exceptionFormat = 'full'
            showExceptions true
            showCauses true
            showStackTraces true
        }
        maxHeapSize = '1500m'
    }
}


ext {
    autoValueVersion = '1.7'
    floggerVersion = '0.5.1'
    guavaVersion = '33.0.0-jre'
    guiceVersion = '4.2.3'
    javaxInjectVersion = '1'
    jcommanderVersion = '1.48'
    jsoupVersion = '1.9.2'
    okhttpVersion = '3.12.0'
    protobufVersion = '3.25.2'
    tsunamiVersion = 'latest.release'

    junitVersion = '4.13'
    mockitoVersion = '2.28.2'
    truthVersion = '1.4.0'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

dependencies {
    implementation "com.google.auto.value:auto-value-annotations:${autoValueVersion}"
    implementation "com.google.flogger:flogger:${floggerVersion}"
    implementation "com.google.flogger:google-extensions:${floggerVersion}"
    implementation "com.google.flogger:flogger-system-backend:${floggerVersion}"
    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "com.google.inject:guice:${guiceVersion}"
    implementation "org.jsoup:jsoup:${jsoupVersion}"
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation "com.google.protobuf:protobuf-javalite:${protobufVersion}"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    implementation "com.google.tsunami:tsunami-common:${tsunamiVersion}"
    implementation "com.google.tsunami:tsunami-plugin:${tsunamiVersion}"
    implementation "com.google.tsunami:tsunami-proto:${tsunamiVersion}"
    implementation "javax.inject:javax.inject:${javaxInjectVersion}"
    implementation "com.beust:jcommander:${jcommanderVersion}"
    implementation "org.mockito:mockito-core:${mockitoVersion}"
    annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"

    testImplementation "com.google.truth:truth:${truthVersion}"
    testImplementation "com.google.truth.extensions:truth-java8-extension:${truthVersion}"
    testImplementation "com.google.truth.extensions:truth-proto-extension:${truthVersion}"
    testImplementation "junit:junit:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    testAnnotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"
}

task runFingerprintUpdater(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.google.tsunami.plugins.fingerprinters.web.tools.FingerprintUpdater'
}

task runFingerprintFileConverter(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.google.tsunami.plugins.fingerprinters.web.tools.FingerprintFileConverter'
}
